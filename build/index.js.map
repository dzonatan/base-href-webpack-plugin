{"version":3,"sources":["../index.js"],"names":["BaseHrefWebpackPlugin","options","compiler","baseHref","plugin","compilation","hooks","htmlWebpackPluginBeforeHtmlProcessing","tapAsync","htmlPluginData","callback","baseTagRegex","baseTagMatches","html","match","replace","modifiedBaseTag"],"mappings":";;;;;;;;;;IAAaA,qB,WAAAA,qB;AACX,iCAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA;;;;0BAEIC,Q,EAAU;AAAA;;AACd,UAAI,CAAC,KAAKD,OAAL,CAAaE,QAAlB,EAA4B;AAC1B;AACD;;AAEDD,eAASE,MAAT,CAAgB,aAAhB,EAA+B,UAACC,WAAD,EAAiB;AAC3CA,oBAAYC,KAAZ,CAAkBC,qCAAlB,CAAwDC,QAAxD,CAAiE,uBAAjE,EAA0F,UAACC,cAAD,EAAiBC,QAAjB,EAA8B;AACzH;AACA,cAAMC,eAAe,YAArB;AACA,cAAMC,iBAAiBH,eAAeI,IAAf,CAAoBC,KAApB,CAA0BH,YAA1B,CAAvB;AACA,cAAI,CAACC,cAAL,EAAqB;AACnB;AACAH,2BAAeI,IAAf,GAAsBJ,eAAeI,IAAf,CAAoBE,OAApB,CAA4B,SAA5B,EAAuC,yBAAsB,MAAKd,OAAL,CAAaE,QAAnC,QAAvC,CAAtB;AACD,WAHD,MAGO;AACL;AACA,gBAAMa,kBAAkBJ,eAAe,CAAf,EAAkBG,OAAlB,CAA0B,aAA1B,aAAkD,MAAKd,OAAL,CAAaE,QAA/D,OAAxB;AACAM,2BAAeI,IAAf,GAAsBJ,eAAeI,IAAf,CAAoBE,OAApB,CAA4BJ,YAA5B,EAA0CK,eAA1C,CAAtB;AACD;;AAEDN,mBAAS,IAAT,EAAeD,cAAf;AACD,SAdE;AAeJ,OAhBD;AAiBD","file":"index.js","sourcesContent":["export class BaseHrefWebpackPlugin {\r\n  constructor(options) {\r\n    this.options = options;\r\n   }\r\n\r\n  apply(compiler) {\r\n    if (!this.options.baseHref) {\r\n      return;\r\n    }\r\n\r\n    compiler.plugin('compilation', (compilation) => {\r\n         compilation.hooks.htmlWebpackPluginBeforeHtmlProcessing.tapAsync('BaseHrefWebpackPlugin', (htmlPluginData, callback) => {\r\n        // Check if base tag already exists\r\n        const baseTagRegex = /<base.*?>/i;\r\n        const baseTagMatches = htmlPluginData.html.match(baseTagRegex);\r\n        if (!baseTagMatches) {\r\n          // Insert it in top of the head\r\n          htmlPluginData.html = htmlPluginData.html.replace(/<head>/i, '$&' + `<base href=\"${this.options.baseHref}\">`);\r\n        } else {\r\n          // Otherwise replace href attribute of current base tag\r\n          const modifiedBaseTag = baseTagMatches[0].replace(/href=\"\\S+\"/i, `href=\"${this.options.baseHref}\"`);\r\n          htmlPluginData.html = htmlPluginData.html.replace(baseTagRegex, modifiedBaseTag);\r\n        }\r\n\r\n        callback(null, htmlPluginData);\r\n      });\r\n    });\r\n  }\r\n}\r\n"]}